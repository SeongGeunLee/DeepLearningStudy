#[1,2]#
1): [[1.,0.,0.,0.],[0.,1.,0.,0.],[0.,0.,1.,0.]]
2): 그래디언트 소실문제, 지역최소점에 머무를 수 있다.
3):x
4):cpu는 순차적으로 gpu는 병렬적으로 처리
5): [[19,32],
[18,25]]
6): (1) 4 (2) int32
7): my_slice = train_images[-4;4,4:-4,:]
8): 배치,  , 느리다, 배치
9): 입력 데이터, 규칙, 답
10): x=np.transpose(x)
11): 지도학습, 비지도 학습, 강화학습
12): 모멘텀
13): 다수의 층(레이어)을 가지고 있음을 의미
14): cuda는 NVIDA회사에서 자사 제품을 위해 개발한 애플리케이션이며 cpu,gpu동시 지원한다
    cuda C는 c언어로 서술 가능한 cuda
15): [1,4],[2,5],[3,6]
16): 거짓
17:) 1,4
18:) 역전파

#[3,4]#
1): 현재의 가중치에 더 큰 factor를 적용하고 이전 가중치에 적은 factor를 적용해서 거친 기울기를 보기 편하게
2): 강화 학습은 보상을 얻는 방향으로 학습하는데 비지도에는 보상부분이 없음
3): 음수
4):
5): 병목현상을 막기 위해
6): 네트워크 크기 축소, 훈련데이터의 양을 늘린다, 규제추가, 드롭아웃사용
7): binary-crossentropy
8): sequential 모델, 함수형 API
9): 병목현상을 막기 위해
10): softmax
11): mse
12): 강화 학습은 보상을 얻는 방향으로 학습하는데 비지도에는 보상부분이 없음
13): 5
14): 5
15): 4
16): o o x
17): 
18): 1~0 사이의 값으로 만듬 정규화
19): 1,4
20): 빨간선

#[5,6]#
1): 복잡하게 나온 결과를 축소, 풀링,max풀링
2): 288
3): 2
4): x
5): cnn rnn
6): 3
7): 가중치 크기가 커진다, 가중치규제 추가하거나 드롭아웃 추가
8): 배치크기
9): 2,3
10): (1) 속도가 빠르다 (2) 시계열데이터 정보가 없다.
11): 1)이전의 가중치를 고려할지 안 할지 결정 2) 고려할 이전의 가중치값 비율 결정 3) 현재 가중치와 처리 후 출력
12): 비슷한 의미가 있는 단어들이 서로 가까운 곳에 나타남, 단어의 의미 포함
13): 최대한 가중치 손실없이 크기를 줄일 수 있어서
14): 특성추출, 미세조정
15): LSTM, RRU
16):
17): o
18): x

#[7,8]#
1): 1) 넘파이 배열의 리스트 주입 2) 입력 이름 설정시 입력이름과 넘파이 배열로 된 딕셔너리 주입
2): 3
3): 5
4): 낮은
5): 5
6): x o
7): 5
8): 3에포크 동안 모델이 나아지지 않으면 모델을 멈추고 싶다
10): 하이퍼파라미터는 사용자가 설정, 파라미터는 정해진 매개변수
11): 인코더과정에서 개념백터를 추출 뒤 디코더로 넘어가는 과정
12): o
13): 그람행렬
14): 베니싱, 역전파
15): 5 
16): Nonparametric method
17): 4
18): 경사상승법
19) 생성자는 판별자로부터 , 판별자는 진짜 이미지
